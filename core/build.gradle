apply plugin: "com.android.library"
apply plugin: "me.tatarka.retrolambda"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testApplicationId "de.danoeh.antennapod.core.tests"
        testInstrumentationRunner "de.danoeh.antennapod.core.tests.AntennaPodTestRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    packagingOptions {
        exclude "META-INF/LICENSE.txt"
        exclude "META-INF/NOTICE.txt"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    publishNonDefault true
    productFlavors {
        free {
        }
        play {
        }
    }

}

repositories {
    maven { url "https://jitpack.io" }
    mavenCentral()
}

dependencies {
    compile "com.android.support:support-v4:$supportVersion"
    compile "com.android.support:appcompat-v7:$supportVersion"
    compile "org.apache.commons:commons-lang3:$commonslangVersion"
    compile ("org.shredzone.flattr4j:flattr4j-core:$flattr4jVersion") {
        exclude group: "org.json", module: "json"
    }
    compile "commons-io:commons-io:$commonsioVersion"
    compile "com.jayway.android.robotium:robotium-solo:$robotiumSoloVersion"
    compile "org.jsoup:jsoup:$jsoupVersion"
    compile "com.github.bumptech.glide:glide:$glideVersion"
    compile "com.github.bumptech.glide:okhttp-integration:$glideOkhttpIntegrationVersion"
    compile "com.squareup.okhttp:okhttp:$okhttpVersion"
    compile "com.squareup.okhttp:okhttp-urlconnection:$okhttpVersion"
    compile "com.squareup.okio:okio:$okioVersion"
    compile "com.nineoldandroids:library:2.4.0"
    compile "de.greenrobot:eventbus:$eventbusVersion"
    compile "io.reactivex:rxandroid:$rxAndroidVersion"

    compile "com.github.AntennaPod:AntennaPod-AudioPlayer:$audioPlayerVersion"

    // Add casting features
    //// free build hack to skip "play" specific dependencies on "free" builds
    gradle.startParameter.taskRequests.each { taskRequest ->
        taskRequest.args.each { taskName ->
            String flavorName = "Free";
            String[] buildTypes = ["Debug", "Release"];
            String[] taskTypes = ["", "AndroidTest", "AndroidTestSources", "Annotations", "Classes",
                                  "JarArtifact", "PlayResources", "Sources", "UnitTest", "UnitTestSources"];
            boolean skip = taskName == "tasks" || taskName == "assemble" + flavorName;
            for (int i = 0; i < buildTypes.length && skip == false; ++i) {
                String buildType = buildTypes[i];
                for (int j = 0; j < taskTypes.length && skip == false; j++) {
                    if (taskName.endsWith(flavorName + buildType + taskTypes[j])) {
                        skip = true;
                    }
                }
            }
            if (!skip) {
                playCompile "com.google.android.libraries.cast.companionlibrary:ccl:$castCompanionLibVer"
                compile "com.android.support:mediarouter-v7:$supportVersion"
                playCompile "com.google.android.gms:play-services-cast:$playServicesVersion"
            } else if (taskName != "tasks") {
                System.out.println("core: skipping some dependencies due to free build hack");
            }
        }
    }
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint" << "-Xlint:-deprecation" << "-Xlint:-serial"
        }
    }
}
