apply plugin: "com.android.library"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        multiDexEnabled false
        versionCode 1
        versionName "1.0"
        testApplicationId "de.danoeh.antennapod.core.tests"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ eventBusIndex : 'de.danoeh.antennapod.core.ApCoreEventBusIndex' ]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
        debug {
            // debug build has method count over 64k single-dex threshold.
            // For building debug build to use on Android < 21 (pre-Android 5) devices,
            // you need to manually change class
            // de.danoeh.antennapod.PodcastApp to extend MultiDexApplication .
            // See Issue #2813
            multiDexEnabled true
        }
    }

    packagingOptions {
        exclude "META-INF/LICENSE.txt"
        exclude "META-INF/NOTICE.txt"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    flavorDimensions "market"
    productFlavors {
        free {
            dimension "market"
        }
        play {
            dimension "market"
        }
    }

}

dependencies {
    implementation(Libs.support_v4)
    implementation(Libs.appcompat_v7)
    implementation(Libs.preference_v14)
    implementation(Libs.work_runtime)

    implementation(Libs.commons_lang3)
    implementation(Libs.commons_text)
    implementation(Libs.commons_io)
    implementation(Libs.robotium_solo)
    implementation(Libs.jsoup)
    implementation(Libs.glide)
    annotationProcessor(Libs.com_github_bumptech_glide_compiler)
    implementation(Libs.okhttp3_integration)
    implementation(Libs.okhttp)
    implementation(Libs.okhttp_urlconnection)
    implementation(Libs.okio)
    implementation(Libs.eventbus)
    annotationProcessor(Libs.eventbus_annotation_processor)
    implementation(Libs.rxandroid)
    implementation(Libs.rxjava)
    implementation(Libs.awaitility)

    implementation(Libs.exoplayer)
    implementation(Libs.antennapod_audioplayer)

    // Add casting features
    // free build hack: skip some dependencies
    if (!doFreeBuild()) {
        playApi(Libs.com_google_android_libraries_cast_companionlibrary_ccl)
        api(Libs.mediarouter_v7)
        playApi(Libs.play_services_cast)
        api(Libs.com_google_android_support_wearable)
    } else {
        System.out.println("core: free build hack, skipping some dependencies")
    }

    testImplementation(Libs.junit)
    testImplementation(Libs.mockito_core)
    androidTestImplementation(Libs.espresso_core)
    androidTestImplementation(Libs.com_android_support_test_runner)
    androidTestImplementation(Libs.com_android_support_test_rules)

}

tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        events "skipped", "passed", "failed"
        showStandardStreams true
        displayGranularity 2
    }
}
